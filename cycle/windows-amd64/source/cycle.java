/* autogenerated by Processing revision 1292 on 2023-07-25 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class cycle extends PApplet {

static final int FRAME_RATE = 60; 

public void setup() {
  /* size commented out by preprocessor */;
  background(220);
  colorMode(HSB);
  stroke(100);
  strokeWeight(2);
  frameRate(FRAME_RATE);
}

public void draw() {
  fill(200);
  pushMatrix();
  translate(width/2, height/2);
  ellipse(0, 0, width, height); 
  
  final int lines = 300;
  for (int i = 0; i <= lines; i+=1) {
    fill(map((float)i, 0, lines, 0, 255), 255, 255);
    pushMatrix();
    rotate(((float)i / (float)lines) * TAU);
    double bpm = (double)i + 10;
    float cycle_pos = map((float)beat(bpm), 0.0f, 4.0f, -width/2, width/2);
    ellipse(cycle_pos, 0, 5, 5);
    popMatrix();
  }
  popMatrix();
}

public double beat(double bpm) {
  final double current_second = (double)frameCount / FRAME_RATE;
  final double beats_per_second = bpm / 60.0f;
  return (current_second * beats_per_second) % 4.0f;
}


  public void settings() { size(500, 500); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "cycle" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
